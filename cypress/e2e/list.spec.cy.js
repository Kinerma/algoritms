import {circle, circleContent, defaultColor, changingColor, circleSmall, border, letter} from "../constants";

describe('Тестирование связного списка', () => {
  beforeEach(() => {
    cy.visit("/list");
    cy.get('#inputValue').as('string')
    cy.get('#inputIndex').as('number')
  })

  it('Если в инпуте пусто, то кнопки добавления недоступны', () => {
    cy.get('@string').should('be.empty')
    cy.get('@number').should('be.empty')
    cy.contains('Добавить в head').should('be.disabled')
    cy.contains('Добавить в tail').should('be.disabled')
    cy.contains('Добавить по индексу').should('be.disabled')
    cy.contains('Удалить по индексу').should('be.disabled')
    cy.contains('Удалить в head').should('be.visible')
    cy.contains('Удалить в tail').should('be.visible')
  })
  it('Отрисовка дефолтного списка', () => {
    cy.get(circle).as("circle")
    cy.get(circleContent).as("content")
    cy.get('@content').first().contains('head')
    cy.get('@circle').should('have.css', 'border-color', defaultColor)
    cy.get('@content').last().contains('tail')
  })
  it('Добавление элемента в head', () => {
    cy.get("@string").type("12").should('have.value', '12')
    cy.contains("Добавить в head").should("be.visible").click()
    cy.wait(500)
    cy.get(circle).as("circle")
    cy.get('@circle').first().contains('12')
    cy.get(circleContent).as("content")
    cy.get('@content').first().contains('head')
  })
  it('Добавление элемента в tail', () => {
    cy.get("@string").type("22").should('have.value', '22')
    cy.contains("Добавить в tail").should("be.visible").click()
    cy.wait(500)
    cy.get(circle).as("circle")
    cy.get('@circle').last().contains('22')
    cy.get(circleContent).as("content")
    cy.get('@content').last().contains('tail')
  })
  it('Добавление элемента в индексу', () => {
    cy.get('@string').type("22").should('have.value', '22')
    cy.get("@number").type("2").should('have.value', '2')
    cy.contains("Добавить по индексу").should("be.visible").click()
    cy.wait(500)
    cy.get(circle).as("circle")
    cy.get('@circle').eq(2).contains('2')
    cy.get(circleContent).as("content")
    cy.get('@content').first().contains('head')
    cy.get('@content').last().contains('tail')
  })
  it('Удалить значение в head', () => {
    cy.get('@string').type("22").should('have.value', '22')
    cy.contains("Добавить в head").should("be.visible").click()
    cy.wait(500)
    cy.contains('Удалить в head').should("be.visible").click()
    cy.get('[data-cy="circles"]').as('circles')
    cy.get('[data-cy="smallCircle"]').as('small')
    cy.get('@circles').find('[data-cy="circle"]').first().find(letter).should('have.value', '')
    cy.get('@small').find(border).should('have.css', 'border-color', changingColor)
    cy.wait(500)
    cy.get('@circles').each($circle => {
      cy.wrap($circle).find(letter).should('be.not.empty')
      cy.wrap($circle).find(border).should('have.css', 'border-color', defaultColor)
    })
    cy.wait(500)
    cy.get(circleContent).as("content")
    cy.get('@content').first().contains('head')
  })
  it('Удалить значение в tail', () => {
    cy.get('@string').type("22").should('have.value', '22')
    cy.contains("Добавить в tail").should("be.visible").click()
    cy.wait(500)
    cy.contains('Удалить в tail').should("be.visible").click()
    cy.get('[data-cy="circles"]').as('circles')
    cy.get('@circles').find('[data-cy="circle"]').last().find(letter).should('have.value', '')
    cy.get('[data-cy="smallCircle"]').as('small')
    cy.get('@small').find(border).should('have.css', 'border-color', changingColor)
    cy.wait(500)
    cy.get('@circles').each($circle => {
      cy.wrap($circle).find(letter).should('be.not.empty')
      cy.wrap($circle).find(border).should('have.css', 'border-color', defaultColor)
    })
    cy.wait(500)
    cy.get(circleContent).as("content")
    cy.get('@content').last().contains('tail')
  })
  it('Удалить значение по индексу', () => {
    cy.get('@number').type(2).should('have.value', '2')
    cy.contains('Удалить по индексу').should('be.visible').click()
    cy.get(border).as('borders')
    cy.get('@borders').eq(0).should('have.css', 'border-color', changingColor)
    cy.wait(500)
    cy.get('@borders').eq(1).should('have.css', 'border-color', changingColor)
    cy.wait(500)
    cy.get('@borders').eq(2).should('have.css', 'border-color', changingColor)
    cy.wait(500)
    cy.get('@borders').eq(2).should('have.text', '').should('have.css', 'border-color', defaultColor)
    cy.get(circleSmall).as("small")
    cy.get("@small").should('have.value', '').should('have.css', 'border-color', changingColor)
    cy.wait(500)
    cy.get('@borders').should('have.length', 3)
    cy.get(circleContent).as("content")
    cy.get('@content').first().contains('head')
    cy.get('@content').last().contains('tail')
  })
})
